# @package _global_
defaults:
  - /model:
    - flat_enc_dec
    - scale_history
  - /model/task:
    - joint_decode_flat_v2
  - /dataset:
    - flat
    - scale_history
model:
  session_embed_token_count: 1 # Keep it low for maybe easier FT?
  subject_embed_strategy: EmbedStrat.token
  neurons_per_token: 32
  causal: True
  task:
    tasks: [ModelTask.spike_context, ModelTask.kinematic_decoding, ModelTask.constraints]
    task_weights: [1.0, 1.0] # after a failed set of initial exps, we decide to 10x to bring losses up to O(0.5)
    mask_ratio: 0.2
    covariate_mask_ratio: 0.5
    encode_constraints: True
  transformer:
    n_layers: 8
  use_full_encode: True
dataset:
  tokenize_covariates: True
  behavior_dim: 10 # Force is here, include +1 for padding, etc.
  sparse_constraints: True
  datasets:
  # - pitt_return.* # Currently has obs, ortho, fbc, helicopter rescue
  - pitt_broad.*
  data_keys:
  - DataKey.spikes
  - DataKey.constraint
  - DataKey.bhvr_vel # Just testing
  # - DataKey.task_return
train:
  patience: 50
  autoscale_batch_size: False
  effective_batch_size: 512
  batch_size: 4 # Huge L - we're bottlenecked by some singularly large behavioral trajs. Need some kind of cropping policy...
inherit_exp: ndt3_pilots/multimodal